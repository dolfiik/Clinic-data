version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: clinic-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-clinic_db}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      # Persistent data
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./docker/postgres/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    networks:
      - clinic-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: clinic-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@clinic.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - clinic-network
    depends_on:
      - postgres

  # Backend API 
  # backend:
  #   build:
  #     context: ./backend
  #     dockerfile: ../docker/Dockerfile
  #   container_name: clinic-backend
  #   restart: unless-stopped
  #   environment:
  #     DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-clinic_db}
  #     SECRET_KEY: ${SECRET_KEY:-change-me-in-production}
  #   ports:
  #     - "${API_PORT:-8000}:8000"
  #   volumes:
  #     - ./backend:/app
  #     - ./models:/app/models:ro  # Read-only access do modeli ML
  #   networks:
  #     - clinic-network
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  clinic-network:
    driver: bridge
